<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Physics Website</title><link>https://l-yc.github.io/physics-website/</link><description>Recent content in Introduction on Physics Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://l-yc.github.io/physics-website/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://l-yc.github.io/physics-website/docs/feynman/recap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/docs/feynman/recap/</guid><description>Recap
#
You should be familiar with subatomic particles, antimatter, and classical electrodynamics. But here&amp;rsquo;s a recap of these topics before we move on into quantum electrodynamics and feynmann diagrams.
Subatomic Particles
#
To think about quantum interactions, you should ideally be aware of our current understanding of the elementary particles that make up our universe – They are shown in the diagram below.
You might be curious as to what protons and neutrons are made up of.</description></item><item><title/><link>https://l-yc.github.io/physics-website/docs/feynman/quantum-electrodynamics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/docs/feynman/quantum-electrodynamics/</guid><description>Quantum electrodynamics
#
Combining the ideas of Quantum and Classical Electrodynamics, we have quantum electrodynamics. In essence, Quantum electrodynamics explains the phenomena of electric fields and magnetic fields in terms of the discrete interactions of charged particles and photons.
Transferring Momentum
#
Force is the change in momentum over the change in time, or $F = \frac{dp}{dt}$. As such, this means that for an object to assert a force on another, it must transfer momentum somehow.</description></item><item><title/><link>https://l-yc.github.io/physics-website/docs/feynman/feynman-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/docs/feynman/feynman-diagrams/</guid><description>FEYNMAN DIAGRAMS (ELECTROMAGNETIC FORCE)
#
Interactions involving these fermions and bosons can be graphically described using Feynman diagrams. Let’s start by looking at an interaction between an electron and a photon.
In this diagram, the y-axis represents time and the x-axis represents space. The electron first starts on the left, and moves to the right. At the vertex (connection between the black and blue squiggly lines), the electron and a photon happen to be at the same point in space at the same time.</description></item><item><title/><link>https://l-yc.github.io/physics-website/docs/feynman/virtual-particles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/docs/feynman/virtual-particles/</guid><description>Virtual Particles
#
Previously, we saw how the transfer of photons from one electron to another explains the repulsion when they come close.
But we still haven’t answered the question: When the electron is created released form the first electron, the conservation of energy is violated. How do we account for this?
Heisenberg Uncertainty Principle
#
The Heisenberg Uncertainty Principle states that the more precisely the time of a particle is determined, the less precisely the energy can be determined.</description></item><item><title/><link>https://l-yc.github.io/physics-website/docs/feynman/applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/docs/feynman/applications/</guid><description>Applications of Feynman Diagrams
#
Significance of Feynman Diagrams
#
With its simplicity and elegance, the Feynman Diagram has been applied liberally in particle physics explanations. Using just a bunch of lines and squiggly lines, Feynman was able to explain and solve problems involving subatomic particle interactions easily. His diagrams are brilliant illustrations that allowed us to predict other particle interactions after constructing a single example.
But it hasn&amp;rsquo;t always been this way.</description></item><item><title>Creating a New Theme</title><link>https://l-yc.github.io/physics-website/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/posts/creating-a-new-theme/</guid><description>Introduction
#
This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://l-yc.github.io/physics-website/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/posts/migrate-from-jekyll/</guid><description>Move static content to static
#
Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/
▾ images/
logo.png
should become
▾ &amp;lt;root&amp;gt;/
▾ static/
▾ images/
logo.png
Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://l-yc.github.io/physics-website/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://l-yc.github.io/physics-website/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://l-yc.github.io/physics-website/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo
#
Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs
#
Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item></channel></rss>